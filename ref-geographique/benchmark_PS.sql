
/*
****
**** PROCEDURE STOCKEE DE REFERENCE
****                    GET_ZIP_AND_PLACE_FROM_COUNTRY_AND_PLACE_DENORM
****

CREATE OR REPLACE PROCEDURE "GET_ZIP_AND_PLACE_FROM_COUNTRY_AND_PLACE_DENORM"("COUNTRY" VARCHAR(2), "INPUT_PLACE" VARCHAR(16777216))
RETURNS TABLE ("ID" NUMBER(38,0), "POSTCODE" VARCHAR(16777216), "PLACES" VARCHAR(16777216))
LANGUAGE SQL
EXECUTE AS OWNER
AS '
DECLARE
 
  		res_fr RESULTSET DEFAULT (SELECT PL.PLACES_ID, REPLACE(PL.POSTCODE,'' ''), PL.LOCALITY
						FROM REF_DEV.REF_GEOGRAPHIQUE.PLACES_DENORM PL
						INNER JOIN REF_DEV.REF_GEOGRAPHIQUE.DATA_LANGUAGES DL1 ON (PL.ISO = DL1.ISO)
						INNER JOIN REF_DEV.REF_GEOGRAPHIQUE.DATA_LANGUAGES DL2 ON (DL2.LANG1 = PL.PLACES_LANGUAGE AND DL2.ISO = PL.ISO)
						WHERE UPPER(PL.LOCALITY) LIKE CONCAT(UPPER(:input_place),''%'') 
						AND (UPPER(PL.ISO)=UPPER(:country) OR UPPER(DL1.SOVEREIGN)=UPPER(:country))
						AND IS_POSTAL=1 
						ORDER BY LENGTH(PL.LOCALITY)
						LIMIT 50);
	
		res_autre RESULTSET DEFAULT (SELECT PL.PLACES_ID, REPLACE(PL.POSTCODE,'' '') , PL.LOCALITY 
						FROM REF_DEV.REF_GEOGRAPHIQUE.PLACES_DENORM PL
						INNER JOIN REF_DEV.REF_GEOGRAPHIQUE.DATA_LANGUAGES DL1 ON (PL.ISO = DL1.ISO)
						INNER JOIN REF_DEV.REF_GEOGRAPHIQUE.DATA_LANGUAGES DL2 ON (DL2.LANG1 = PL.PLACES_LANGUAGE AND DL2.ISO = PL.ISO)
						WHERE UPPER(PL.LOCALITY) LIKE CONCAT(UPPER(:input_place),''%'') 
						AND ( UPPER(PL.ISO)=UPPER(:country) OR UPPER(DL1.SOVEREIGN)=UPPER(:country))
						AND IS_POSTAL=1 
						ORDER BY LENGTH(PL.LOCALITY)
						LIMIT 50);

BEGIN
	IF (country=''FR'') THEN  
		RETURN TABLE(res_fr);
	ELSE
		RETURN TABLE(res_autre); 
	END IF; 
END;
';
*/

-- TEST de REFERENCE 
call REF_DEV.PUBLIC.GET_ZIP_AND_PLACE_FROM_COUNTRY_AND_PLACE_DENORM('US','New');
-- entre 500 ms et 1800 ms (première exécution)


CREATE OR REPLACE TRANSIENT TABLE REF_DEV.PUBLIC.PLACES_SEARCH AS
SELECT   CASE WHEN DL1.SOVEREIGN IS NULL OR TRIM(DL1.SOVEREIGN)='' THEN UPPER(PL.ISO)
              ELSE UPPER(DL1.SOVEREIGN) 
         END COUNTRY_CODE
        ,PL.PLACES_ID
        ,REPLACE(PL.POSTCODE,' ') AS POSTCODE 
        ,LOCALITY
        --,PL.LOCALITY
        ,PL.PLACES_LANGUAGE, DL1.SOVEREIGN 
FROM REF_DEV.REF_GEOGRAPHIQUE.PLACES_DENORM PL
     INNER JOIN REF_DEV.REF_GEOGRAPHIQUE.DATA_LANGUAGES DL1 ON (PL.ISO = DL1.ISO)
WHERE IS_POSTAL=1
ORDER BY COUNTRY_CODE
;

SELECT * FROM REF_DEV.PUBLIC.PLACES_SEARCH
WHERE COUNTRY_CODE = UPPER('FR')
  AND LOCALITY ILIKE CONCAT('Montau','%')
;

CREATE OR REPLACE TRANSIENT TABLE REF_DEV.PUBLIC.PLACES_SEARCH2 AS
SELECT   CASE WHEN DL1.SOVEREIGN IS NULL OR TRIM(DL1.SOVEREIGN)='' THEN UPPER(PL.ISO)
              ELSE UPPER(DL1.SOVEREIGN) 
         END COUNTRY_CODE
        ,PL.PLACES_ID
        ,REPLACE(PL.POSTCODE,' ') AS POSTCODE 
        ,LOCALITY
        --,PL.LOCALITY
        ,PL.PLACES_LANGUAGE, DL1.SOVEREIGN
        ,COUNTRY_CODE||'_'||LOCALITY||'_'||POSTCODE as SEARCH_KEY 
FROM REF_DEV.REF_GEOGRAPHIQUE.PLACES_DENORM PL
     INNER JOIN REF_DEV.REF_GEOGRAPHIQUE.DATA_LANGUAGES DL1 ON (PL.ISO = DL1.ISO)
WHERE IS_POSTAL=1
ORDER BY SEARCH_KEY
;

SELECT * FROM REF_DEV.PUBLIC.PLACES_SEARCH2
WHERE COUNTRY_CODE = UPPER('FR')
  AND SEARCH_KEY ILIKE CONCAT('%',CONCAT('Montau','%'))
; 


CREATE OR REPLACE PROCEDURE REF_DEV.PUBLIC.GET_ZIP_AND_PLACE_FROM_COUNTRY_AND_PLACE_SEARCH("COUNTRY" VARCHAR(2), "INPUT_PLACE" VARCHAR(16777216))
RETURNS TABLE ("PLACES_ID" NUMBER(38,0), "POSTCODE" VARCHAR(16777216), "LOCALITY" VARCHAR(16777216))
LANGUAGE SQL
EXECUTE AS OWNER
AS 
DECLARE
    query VARCHAR DEFAULT 'SELECT PLACES_ID, POSTCODE, LOCALITY 
                           FROM REF_DEV.PUBLIC.PLACES_SEARCH
                           WHERE COUNTRY_CODE = UPPER('''||:COUNTRY||''') 
                             AND LOCALITY ILIKE CONCAT('''||:INPUT_PLACE||''',''%'')
                           ORDER BY LENGTH(LOCALITY), POSTCODE
                           LIMIT 50';
    res RESULTSET;
BEGIN
    res := (EXECUTE IMMEDIATE :query);             
    RETURN TABLE(res);
END;
;

call REF_DEV.PUBLIC.GET_ZIP_AND_PLACE_FROM_COUNTRY_AND_PLACE_SEARCH('US','New');
-- entre 471 ms et 1100 ms (première exécution)


CREATE OR REPLACE PROCEDURE REF_DEV.PUBLIC.GET_ZIP_AND_PLACE_FROM_COUNTRY_AND_PLACE_SEARCH2("COUNTRY" VARCHAR(2), "INPUT_PLACE" VARCHAR(16777216))
RETURNS TABLE ("PLACES_ID" NUMBER(38,0), "POSTCODE" VARCHAR(16777216), "LOCALITY" VARCHAR(16777216))
LANGUAGE SQL
EXECUTE AS OWNER
AS 
DECLARE
    query VARCHAR DEFAULT 'SELECT PLACES_ID, POSTCODE, LOCALITY 
                           FROM REF_DEV.PUBLIC.PLACES_SEARCH2
                           WHERE COUNTRY_CODE = UPPER('''||:COUNTRY||''') 
                             AND SEARCH_KEY ILIKE CONCAT(''%'',CONCAT('''||:INPUT_PLACE||''',''%''))
                           ORDER BY LENGTH(LOCALITY), POSTCODE
                           LIMIT 50';
    res RESULTSET;
BEGIN
    res := (EXECUTE IMMEDIATE :query);             
    RETURN TABLE(res);
END;
;

call REF_DEV.PUBLIC.GET_ZIP_AND_PLACE_FROM_COUNTRY_AND_PLACE_SEARCH2('US','New');
-- entre 208 ms et 612 ms (première exécution)

